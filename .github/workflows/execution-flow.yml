name: Events Demo 1 Workflow
on: 
  #pull_request:
  #  types: [opened, closed]
  #workflow_dispatch:
  push:
    branches:
      - master  
   #   - 'dev-*' # Match any branch name starting with 'dev-'
   #   - 'feature/**' # Match any branch name starting with 'feature/ eg feature/abc, feature/xyz/axz'    
jobs:
  test-job:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v2
      - name: Cache dependencies
        uses: actions/cache@v2 
        with:
           path: ~/.npm 
           key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm install  
      - name: Test code
        run: npm run test
      - name: Upload test report
        uses: actions/upload-artifact@v2
        with:
          name: test-report
          path: test.json   

  build-job: 
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.publishId.outputs.script-file }}
    steps:
      - name: Get code
        uses: actions/checkout@v2
      - name: Cache dependencies
        uses: actions/cache@v2 
        with:
           path: ~/.npm 
           key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm install 
      - name: Build website
        run: npm run build
      - name: Publish JS filename
        id: publishId
        run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'  
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: dist-files
          path: dist  

  deploy-job:
    needs: build-job
    runs-on: ubuntu-latest
    steps:
      - name: Output Event Data
        run: echo "${{ toJson(github.event) }}"
      - name: Get build artifact
        uses: actions/download-artifact@v2
        with:
          name: dist-files
          path: dist  
      - name: show curr dir path
        run: pwd    
      - name: Output content of dist folder
        run: ls -al dist
      - name: Output filename
        run: echo "Script file is ${{ needs.build-job.outputs.script-file }}"  
      - name: Deploy project code 
        run: echo "Deploying..."     
